import 'package:flutter/material.dart';
import 'package:hostelmng/main.dart';
import 'dart:convert'; // For decoding JSON data
import 'home_page.dart';
import 'package:flutter_local_notifications/flutter_local_notifications.dart';
import 'package:font_awesome_flutter/font_awesome_flutter.dart';

class SignInPage extends StatefulWidget {
  @override
  _SignInPageState createState() => _SignInPageState();
}

class HomePages extends StatelessWidget {
  final List<Student> students = [
    // Student(
    //     name: 'Subhashini', idNumber: '192011334', department: 'CSE', year: 4),
    // Student(
    //     name: 'Mahalakshmi', idNumber: '192011442', department: 'IT', year: 4),
    // Student(name: 'Harish', idNumber: '192011097', department: 'CSE', year: 4),
    // // Add more students as needed
  ];
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Hostel Management'),
        actions: [
          IconButton(
            icon: const Icon(Icons.menu),
            onPressed: () {
              // Open the drawer when the menu icon is pressed
              Scaffold.of(context).openDrawer();
            },
          ),
        ],
      ),
      body: Container(
        color: const Color.fromARGB(255, 1, 53, 96),
        child: Padding(
          padding: const EdgeInsets.all(16.0),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              const Text(
                'Student Details',
                style: TextStyle(
                  fontSize: 24,
                  fontFamily: 'Poppins',
                  // fontWeight: FontWeight.bold,
                  color: Colors.white,
                ),
              ),
              const SizedBox(height: 20),
              Expanded(
                child: ListView.builder(
                  itemCount: students.length,
                  itemBuilder: (context, index) {
                    return StudentDetailCard(
                      name: students[index].name,
                      department: students[index].department,
                      idNumber: students[index].idNumber,
                      year: students[index].year,
                    );
                  },
                ),
              ) // // Add your student details widgets here
            ],
          ),
        ),
      ),
      drawer: Drawer(
        child: ListView(
          padding: EdgeInsets.zero,
          children: [
            const DrawerHeader(
              decoration: BoxDecoration(
                color: Color(0xFF194569),
              ),
              child: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Text(
                    'MENU BAR',
                    style: TextStyle(
                      color: Colors.white,
                      fontSize: 24,
                      fontFamily: 'NanumGothic',
                      fontWeight: FontWeight.bold,
                    ),
                  ),
                ],
              ),
            ),
            ListTile(
              leading: const Icon(Icons.lock),
              title: const Text('Change Password'),
              onTap: () {
                _showChangePasswordDialog(context);
                Navigator.pop(context); // Close the drawer
              },
            ),
          ],
        ),
      ),
    );
  }

  // Function to change the password
  void _showChangePasswordDialog(BuildContext context) {
    showDialog(
      context: context,
      builder: (BuildContext context) {
        return AlertDialog(
          title: const Text('Change Password'),
          content: const Column(
            children: [
              TextField(
                decoration: InputDecoration(labelText: 'Current Password'),
                obscureText: true,
              ),
              TextField(
                decoration: InputDecoration(labelText: 'New Password'),
                obscureText: true,
              ),
              TextField(
                decoration: InputDecoration(labelText: 'Confirm Password'),
                obscureText: true,
              ),
            ],
          ),
          actions: [
            TextButton(
              onPressed: () {
                Navigator.pop(context); // Close the dialog
              },
              child: const Text('Cancel'),
            ),
            TextButton(
              onPressed: () {
                Navigator.pop(context); // Close the dialog
              },
              child: const Text('Change'),
            ),
          ],
        );
      },
    );
  }
}

class StudentDetailCard extends StatelessWidget {
  final String name;
  final String idNumber;
  final String department;
  final int year;

  const StudentDetailCard({
    required this.name,
    required this.idNumber,
    required this.department,
    required this.year,
  });

  @override
  Widget build(BuildContext context) {
    return Card(
      elevation: 8,
      margin: const EdgeInsets.symmetric(vertical: 8),
      color: const Color(0xFFDBECF4),
      child: ListTile(
        leading: const Icon(Icons.person),
        title: Text(
          name,
          style: const TextStyle(
            fontSize: 18,
            fontFamily: 'Poppins',
            fontWeight: FontWeight.bold,
          ),
        ),
        subtitle:
            Column(crossAxisAlignment: CrossAxisAlignment.start, children: [
          Text(
            'ID Number: $idNumber',
            style: const TextStyle(
              fontSize: 16,
              fontFamily: 'Poppins',
            ),
          ),
          Text(
            'Department: $department',
            style: const TextStyle(
              fontSize: 16,
              fontFamily: 'Poppins',
            ),
          ),
          Text(
            'Year: $year',
            style: const TextStyle(
              fontSize: 16,
              fontFamily: 'Poppins',
            ),
          ),
        ] // Add more details or actions as needed
                ),
        trailing: IconButton(
          icon: const Icon(Icons.edit),
          onPressed: () {
            // Handle edit button press
          },
        ),
      ),
    );
  }
}

class _SignInPageState extends State<SignInPage> {
  //

  final FlutterLocalNotificationsPlugin flutterLocalNotificationsPlugin =
      FlutterLocalNotificationsPlugin();

  _initNotifications() async {
    const AndroidInitializationSettings initializationSettingsAndroid =
        AndroidInitializationSettings('@mipmap/ic_launcher');

    final InitializationSettings initializationSettings =
        InitializationSettings(
      android: initializationSettingsAndroid,
    );

    await flutterLocalNotificationsPlugin.initialize(
      initializationSettings,
    );
  }

  @override
  void initState() {
    super.initState();
    _initNotifications();
  }

  Future<void> _showNotification(
    String title,
    String body,
  ) async {
    const AndroidNotificationDetails androidPlatformChannelSpecifics =
        AndroidNotificationDetails(
      // 'your_channel_id', // Change this to a unique channel ID
      'BAYS PORTAL',
      'BAYS PORTAL notification channel',
      // importance: Importance.max,
      // priority: Priority.high,
      // showWhen: false,
    );

    const NotificationDetails platformChannelSpecifics =
        NotificationDetails(android: androidPlatformChannelSpecifics);

    await flutterLocalNotificationsPlugin.show(
      0, // Notification ID
      'BAYS PORTAL',
      'You have successfully logged in the portal',
      platformChannelSpecifics,
      // )payload: 'item x';
    );
  }

  void _triggerNotification() {
    _showNotification('Notification Title', 'Notification Body');
  }

  //
  TextEditingController registerNumberController = TextEditingController();
  TextEditingController passwordController = TextEditingController();
  GlobalKey<FormState> formKey = GlobalKey<FormState>();
  String? errorMessage;

  // Mock user credentials for demo purposes
  final Map<String, String> userCredentials = {
    'subha@gmail.com': '12345',
    'registerNumber2': 'password2',
    // Add more user credentials as needed
  };

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      // appBar: AppBar(
      //   title: Text('Hostel Management'),
      // ),
      body: SingleChildScrollView(
          child: Container(
              height: MediaQuery.of(context).size.height,
              width: MediaQuery.of(context).size.width,
              decoration: BoxDecoration(
                  gradient: LinearGradient(colors: [
                Color(0xFF8A2387),
                Color(0xFFE94057),
                Color(0xFFF27121),
              ])),
              child: Column(
                  crossAxisAlignment: CrossAxisAlignment.center,
                  children: [
                    SizedBox(
                      height: 80,
                    ),
                    Image.asset('images/th.jpeg'),
                    SizedBox(
                      height: 15,
                    ),
                    Text(
                      'Your Logo',
                      style: TextStyle(
                        color: Colors.white,
                        fontSize: 20,
                      ),
                    ),
                    SizedBox(
                      height: 30,
                    ),
                    Container(
                        height: 480,
                        width: 325,
                        decoration: BoxDecoration(
                            color: Colors.white,
                            borderRadius: BorderRadius.circular(10)),
                        child: Column(
                            crossAxisAlignment: CrossAxisAlignment.center,
                            children: [
                              SizedBox(
                                height: 30,
                              ),
                              Text(
                                'Hello',
                                style: TextStyle(
                                    fontSize: 35, fontWeight: FontWeight.bold),
                              ),
                              SizedBox(
                                height: 10,
                              ),
                              Text(
                                'Please Login to your Account',
                                style:
                                    TextStyle(fontSize: 15, color: Colors.grey),
                              ),
                              SizedBox(
                                height: 20,
                              ),
                              Container(
                                width: 250,
                                child: TextField(
                                  decoration: InputDecoration(
                                    labelText: 'Email Address',
                                    suffixIcon: Icon(
                                      FontAwesomeIcons.envelope,
                                      size: 17,
                                    ),
                                  ),
                                ),
                              ),
                              Container(
                                width: 250,
                                child: TextField(
                                  obscureText: true,
                                  decoration: InputDecoration(
                                    labelText: 'Password',
                                    suffixIcon: Icon(
                                      FontAwesomeIcons.eyeSlash,
                                      size: 17,
                                    ),
                                  ),
                                ),
                              ),
                              Padding(
                                padding: EdgeInsets.fromLTRB(20, 20, 40, 20),
                                child: Row(
                                  mainAxisAlignment: MainAxisAlignment.end,
                                  children: [
                                    Text(
                                      'Forgot Password',
                                      style: TextStyle(
                                          color: Colors.orangeAccent[700]),
                                    )
                                  ],
                                ),
                              ),
                              SizedBox(
                                height: 20,
                              ),
                              GestureDetector(
                                child: Container(
                                  alignment: Alignment.center,
                                  width: 250,
                                  decoration: BoxDecoration(
                                      borderRadius: BorderRadius.circular(50),
                                      gradient: LinearGradient(
                                          begin: Alignment.centerLeft,
                                          end: Alignment.centerRight,
                                          colors: [
                                            Color(0xFF8A2387),
                                            Color(0xFFE94057),
                                            Color(0xFFF27121),
                                          ])),
                                  child: Padding(
                                    padding: EdgeInsets.all(12.0),
                                    child: Text(
                                      'Login',
                                      style: TextStyle(
                                          color: Colors.white,
                                          fontSize: 20,
                                          fontWeight: FontWeight.bold),
                                    ),
                                  ),
                                ),
                              ),
                            ]))
                  ]))
